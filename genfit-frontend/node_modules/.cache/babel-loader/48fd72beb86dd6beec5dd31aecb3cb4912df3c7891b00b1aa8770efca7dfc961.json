{"ast":null,"code":"var _jsxFileName = \"/Users/ishannigam/Code/Example/Genfit/genfit-frontend/src/pages/WorkoutPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, createElement as _createElement } from 'react';\nimport { Typography, Container, Paper, Box, Button, CircularProgress, Alert, Grid, TextField, List, ListItem, ListItemText, IconButton, Divider, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Autocomplete, Chip, Tabs, Tab, Accordion, AccordionSummary, AccordionDetails, Checkbox, FormControlLabel } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\nimport SaveIcon from '@mui/icons-material/Save';\nimport PlaylistAddIcon from '@mui/icons-material/PlaylistAdd';\nimport { getMyWorkoutPlan, updateMyWorkoutPlan, deleteMyWorkoutPlan, searchExercises, createWorkoutPlan } from '../api';\n\n// Define a structure for an empty workout object and set details\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst emptySetDetail = () => ({\n  set_number: 1,\n  reps: 10,\n  weight: 0,\n  rpe: 7,\n  rest_duration: 60,\n  is_warm_up: false\n});\nconst emptyWorkout = (day = 1) => ({\n  name: '',\n  // Will be exercise name\n  exercise_id: '',\n  // Will be from search\n  muscles_targeted: [],\n  // Will be from selected exercise\n  day: day,\n  set_details: [emptySetDetail()],\n  // temp client-side id for list keys during editing\n  temp_id: Date.now() + Math.random()\n});\nconst emptyPlan = () => ({\n  name: 'My New Workout Plan',\n  description: 'A comprehensive plan for the week.',\n  workouts: [emptyWorkout(1)]\n});\nconst WorkoutPage = () => {\n  _s();\n  var _editablePlan$workout;\n  const [plan, setPlan] = useState(null);\n  const [editablePlan, setEditablePlan] = useState(null); // For editing\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n  const [exerciseSearchQuery, setExerciseSearchQuery] = useState('');\n  const [exerciseSearchResults, setExerciseSearchResults] = useState([]);\n  const [searchLoading, setSearchLoading] = useState(false);\n  const [currentDayTab, setCurrentDayTab] = useState(0); // For tabbed day view\n\n  const fetchPlan = useCallback(async () => {\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const {\n        data\n      } = await getMyWorkoutPlan();\n      setPlan(data);\n      setEditablePlan(JSON.parse(JSON.stringify(data))); // Deep copy for editing\n    } catch (err) {\n      if (err.response && err.response.status === 404) {\n        setPlan(null); // No plan exists\n        setEditablePlan(null);\n        setError('No workout plan found. You can create one.');\n      } else {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch workout plan.');\n      }\n    }\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchPlan();\n  }, [fetchPlan]);\n  const handleSearchExercises = useCallback(async query => {\n    if (query && query.length >= 2) {\n      setSearchLoading(true);\n      try {\n        const {\n          data\n        } = await searchExercises(query);\n        setExerciseSearchResults(data.exercises || []);\n      } catch (searchErr) {\n        console.error('Exercise search failed:', searchErr);\n        setExerciseSearchResults([]);\n      }\n      setSearchLoading(false);\n    }\n  }, []);\n  const handlePlanInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setEditablePlan(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleWorkoutChange = (workoutIndex, field, value) => {\n    setEditablePlan(prev => {\n      const updatedWorkouts = [...prev.workouts];\n      updatedWorkouts[workoutIndex] = {\n        ...updatedWorkouts[workoutIndex],\n        [field]: value\n      };\n      return {\n        ...prev,\n        workouts: updatedWorkouts\n      };\n    });\n  };\n  const handleSetDetailChange = (workoutIndex, setIndex, field, value, type = 'text') => {\n    const parsedValue = type === 'number' ? parseFloat(value) : value;\n    setEditablePlan(prev => {\n      const updatedWorkouts = [...prev.workouts];\n      const updatedSetDetails = [...updatedWorkouts[workoutIndex].set_details];\n      updatedSetDetails[setIndex] = {\n        ...updatedSetDetails[setIndex],\n        [field]: parsedValue\n      };\n      updatedWorkouts[workoutIndex] = {\n        ...updatedWorkouts[workoutIndex],\n        set_details: updatedSetDetails\n      };\n      return {\n        ...prev,\n        workouts: updatedWorkouts\n      };\n    });\n  };\n  const addWorkoutToDay = day => {\n    setEditablePlan(prev => ({\n      ...prev,\n      workouts: [...prev.workouts, emptyWorkout(day)]\n    }));\n  };\n  const removeWorkout = workoutIndex => {\n    setEditablePlan(prev => ({\n      ...prev,\n      workouts: prev.workouts.filter((_, index) => index !== workoutIndex)\n    }));\n  };\n  const addSetToWorkout = workoutIndex => {\n    setEditablePlan(prev => {\n      const updatedWorkouts = [...prev.workouts];\n      const newSetNumber = updatedWorkouts[workoutIndex].set_details.length + 1;\n      updatedWorkouts[workoutIndex].set_details = [...updatedWorkouts[workoutIndex].set_details, {\n        ...emptySetDetail(),\n        set_number: newSetNumber\n      }];\n      return {\n        ...prev,\n        workouts: updatedWorkouts\n      };\n    });\n  };\n  const removeSetFromWorkout = (workoutIndex, setIndex) => {\n    setEditablePlan(prev => {\n      const updatedWorkouts = [...prev.workouts];\n      updatedWorkouts[workoutIndex].set_details = updatedWorkouts[workoutIndex].set_details.filter((_, sIdx) => sIdx !== setIndex);\n      // Renumber sets\n      updatedWorkouts[workoutIndex].set_details = updatedWorkouts[workoutIndex].set_details.map((set, idx) => ({\n        ...set,\n        set_number: idx + 1\n      }));\n      return {\n        ...prev,\n        workouts: updatedWorkouts\n      };\n    });\n  };\n  const handleSelectExercise = (workoutIndex, exercise) => {\n    if (exercise) {\n      setEditablePlan(prev => {\n        const updatedWorkouts = [...prev.workouts];\n        updatedWorkouts[workoutIndex] = {\n          ...updatedWorkouts[workoutIndex],\n          name: exercise.name,\n          exercise_id: exercise.id,\n          muscles_targeted: [...(exercise.primary_muscle_groups || []), ...(exercise.supporting_muscle_groups || [])]\n        };\n        return {\n          ...prev,\n          workouts: updatedWorkouts\n        };\n      });\n    }\n  };\n  const handleSaveChanges = async () => {\n    if (!editablePlan) return;\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      // Remove temp_id before sending to backend\n      const planToSave = {\n        ...editablePlan,\n        workouts: editablePlan.workouts.map(({\n          temp_id,\n          ...rest\n        }) => rest)\n      };\n      if (plan && plan.id) {\n        // Plan exists, update it\n        await updateMyWorkoutPlan(planToSave);\n        setSuccess('Workout plan updated successfully!');\n      } else {\n        // No plan exists, create new\n        await createWorkoutPlan(planToSave);\n        setSuccess('Workout plan created successfully!');\n      }\n      fetchPlan(); // Refetch the plan to get the latest version (including ID if new)\n      setIsEditing(false);\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Failed to save workout plan.');\n    }\n    setLoading(false);\n  };\n  const handleDeletePlan = async () => {\n    setDeleteConfirmOpen(false);\n    if (!plan || !plan.id) return; // Should not happen if delete button is visible\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      await deleteMyWorkoutPlan();\n      setSuccess('Workout plan deleted successfully!');\n      setPlan(null);\n      setEditablePlan(null);\n      setIsEditing(false);\n      // Optionally, prompt to create a new one or show the create button\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      setError(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Failed to delete workout plan.');\n    }\n    setLoading(false);\n  };\n  const handleCreateNewPlan = () => {\n    const newPlan = emptyPlan();\n    setPlan({\n      id: null,\n      ...newPlan\n    }); // Temporarily set plan to enable editing UI\n    setEditablePlan(JSON.parse(JSON.stringify(newPlan)));\n    setIsEditing(true);\n    setError(''); // Clear previous \"No plan found\" error\n  };\n  const cancelEditing = () => {\n    setIsEditing(false);\n    if (plan && plan.id) {\n      setEditablePlan(JSON.parse(JSON.stringify(plan))); // Reset to original plan if exists\n    } else {\n      setEditablePlan(null); // No existing plan, clear editable form\n      setError('No workout plan found. You can create one.'); // Reshow error if cancelling creation\n    }\n    setError('');\n    setSuccess('');\n  };\n\n  // Group workouts by day for display\n  const workoutsByDay = workouts => {\n    if (!workouts) return {};\n    return workouts.reduce((acc, workout) => {\n      const day = workout.day || 1; // Default to day 1 if not specified\n      if (!acc[day]) acc[day] = [];\n      acc[day].push(workout);\n      return acc;\n    }, {});\n  };\n  const displayedPlan = isEditing ? editablePlan : plan;\n  const groupedWorkouts = displayedPlan ? workoutsByDay(displayedPlan.workouts) : {};\n  const days = Object.keys(groupedWorkouts).map(Number).sort((a, b) => a - b);\n  if (days.length === 0 && isEditing && (editablePlan === null || editablePlan === void 0 ? void 0 : (_editablePlan$workout = editablePlan.workouts) === null || _editablePlan$workout === void 0 ? void 0 : _editablePlan$workout.length) > 0) {\n    // If editing and all workouts are for day 0 or undefined, show them under Day 1 tab\n    days.push(1);\n    groupedWorkouts[1] = editablePlan.workouts;\n  }\n  if (days.length > 0 && currentDayTab >= days.length) {\n    setCurrentDayTab(0); // Reset tab if it becomes invalid\n  }\n  if (loading && !plan && !isEditing) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"calc(100vh - 200px)\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 108\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 12\n    }, this);\n  }\n  const renderSetForms = (workout, workoutIndex) => {\n    return workout.set_details.map((set, setIndex) => /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 1,\n      sx: {\n        p: 1.5,\n        mb: 1.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        gutterBottom: true,\n        children: [\"Set \", set.set_number, \" \", set.is_warm_up ? '(Warm-up)' : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1.5,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Reps\",\n            name: \"reps\",\n            type: \"number\",\n            value: set.reps,\n            onChange: e => handleSetDetailChange(workoutIndex, setIndex, 'reps', e.target.value, 'number'),\n            fullWidth: true,\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Weight\",\n            name: \"weight\",\n            type: \"number\",\n            value: set.weight,\n            onChange: e => handleSetDetailChange(workoutIndex, setIndex, 'weight', e.target.value, 'number'),\n            fullWidth: true,\n            size: \"small\",\n            InputProps: {\n              inputProps: {\n                step: 0.1\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"RPE\",\n            name: \"rpe\",\n            type: \"number\",\n            value: set.rpe,\n            onChange: e => handleSetDetailChange(workoutIndex, setIndex, 'rpe', e.target.value, 'number'),\n            fullWidth: true,\n            size: \"small\",\n            InputProps: {\n              inputProps: {\n                min: 1,\n                max: 10\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 2,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Rest (s)\",\n            name: \"rest_duration\",\n            type: \"number\",\n            value: set.rest_duration,\n            onChange: e => handleSetDetailChange(workoutIndex, setIndex, 'rest_duration', e.target.value, 'number'),\n            fullWidth: true,\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: set.is_warm_up || false,\n              onChange: e => handleSetDetailChange(workoutIndex, setIndex, 'is_warm_up', e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 40\n            }, this),\n            label: \"Warm-up?\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 1,\n          sx: {\n            textAlign: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => removeSetFromWorkout(workoutIndex, setIndex),\n            color: \"error\",\n            \"aria-label\": \"Remove Set\",\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)]\n    }, set.temp_id || setIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this));\n  };\n  const renderWorkoutForms = (workoutsForDay, day) => {\n    return workoutsForDay.map((workout, indexInDay) => {\n      // Find the global index of the workout in editablePlan.workouts\n      const workoutIndex = editablePlan.workouts.findIndex(w => w.temp_id === workout.temp_id || w.exercise_id === workout.exercise_id && w.day === workout.day && w.name === workout.name);\n      if (workoutIndex === -1 && isEditing) {\n        console.warn(\"Could not find workout index for\", workout);\n        return null; // Should not happen if temp_id is reliable\n      }\n      return /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 2,\n        sx: {\n          p: 2,\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            children: workout.name || 'New Exercise'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => removeWorkout(workoutIndex),\n            color: \"error\",\n            \"aria-label\": \"Remove Exercise from Day\",\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n              options: exerciseSearchResults,\n              getOptionLabel: option => option.name,\n              value: exerciseSearchResults.find(ex => ex.id === workout.exercise_id) || null,\n              loading: searchLoading,\n              onInputChange: (event, newInputValue) => {\n                setExerciseSearchQuery(newInputValue);\n                handleSearchExercises(newInputValue);\n              },\n              onChange: (event, newValue) => {\n                handleSelectExercise(workoutIndex, newValue);\n              },\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n                ...params,\n                label: \"Search and Select Exercise\",\n                fullWidth: true,\n                InputProps: {\n                  ...params.InputProps,\n                  endAdornment: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [searchLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                      color: \"inherit\",\n                      size: 20\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 87\n                    }, this) : null, params.InputProps.endAdornment]\n                  }, void 0, true)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 42\n              }, this),\n              renderOption: (props, option) => {\n                var _option$primary_muscl;\n                return /*#__PURE__*/_createElement(\"li\", {\n                  ...props,\n                  key: option.id,\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 21\n                  }\n                }, /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    sx: {\n                      display: 'flex',\n                      width: 44\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    sx: {\n                      width: 'calc(100% - 44px)',\n                      wordWrap: 'break-word'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle2\",\n                      children: option.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      children: (_option$primary_muscl = option.primary_muscle_groups) === null || _option$primary_muscl === void 0 ? void 0 : _option$primary_muscl.join(', ')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 25\n                }, this));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Muscles Targeted\",\n              value: (workout.muscles_targeted || []).join(', '),\n              fullWidth: true,\n              disabled: true,\n              multiline: true,\n              size: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Day Number\",\n              type: \"number\",\n              value: workout.day,\n              onChange: e => handleWorkoutChange(workoutIndex, 'day', parseInt(e.target.value) || 1),\n              fullWidth: true,\n              size: \"small\",\n              InputProps: {\n                inputProps: {\n                  min: 1\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          sx: {\n            mt: 2,\n            mb: 1\n          },\n          children: \"Sets:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 11\n        }, this), renderSetForms(workout, workoutIndex), /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 30\n          }, this),\n          onClick: () => addSetToWorkout(workoutIndex),\n          size: \"small\",\n          sx: {\n            mt: 1\n          },\n          children: \"Add Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 11\n        }, this)]\n      }, workout.temp_id || workoutIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this);\n    });\n  };\n  const renderReadOnlyWorkout = workout => /*#__PURE__*/_jsxDEV(Accordion, {\n    sx: {\n      mb: 1\n    },\n    children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n      expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 39\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: workout.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Chip, {\n        label: `Day ${workout.day}`,\n        size: \"small\",\n        sx: {\n          ml: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"textSecondary\",\n        gutterBottom: true,\n        children: [\"Muscles: \", (workout.muscles_targeted || []).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        children: workout.set_details.map((set, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n          disableGutters: true,\n          children: /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `Set ${set.set_number}: ${set.reps} reps @ ${set.weight}kg (RPE ${set.rpe})`,\n            secondary: `Rest: ${set.rest_duration}s ${set.is_warm_up ? '(Warm-up)' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }, this)]\n  }, workout.name + workout.day + Math.random(), true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n  if (!isEditing && plan && plan.id) {\n    const planWorkoutsByDay = workoutsByDay(plan.workouts);\n    const planDays = Object.keys(planWorkoutsByDay).map(Number).sort((a, b) => a - b);\n    return /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: {\n            xs: 2,\n            md: 3\n          },\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            children: plan.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 44\n              }, this),\n              variant: \"outlined\",\n              onClick: () => setIsEditing(true),\n              sx: {\n                mr: 1\n              },\n              children: \"Edit Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 44\n              }, this),\n              variant: \"outlined\",\n              color: \"error\",\n              onClick: () => setDeleteConfirmOpen(true),\n              children: \"Delete Plan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: plan.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 17\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 27\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mb: 2\n          },\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 29\n        }, this), plan.workouts && plan.workouts.length > 0 ? planDays.map(day => /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            gutterBottom: true,\n            children: [\"Day \", day]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 29\n          }, this), planWorkoutsByDay[day].map(renderReadOnlyWorkout)]\n        }, day, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 25\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"This plan currently has no workouts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: deleteConfirmOpen,\n        onClose: () => setDeleteConfirmOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Confirm Delete Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Are you sure you want to delete this entire workout plan? This action cannot be undone.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 32\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setDeleteConfirmOpen(false),\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDeletePlan,\n            color: \"error\",\n            autoFocus: true,\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 110\n            }, this) : 'Delete Plan'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this);\n  }\n\n  // Render for loading, no plan, or editing mode\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        p: {\n          xs: 2,\n          md: 3\n        },\n        mt: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        gutterBottom: true,\n        children: isEditing ? editablePlan !== null && editablePlan !== void 0 && editablePlan.id ? 'Edit Workout Plan' : 'Create Workout Plan' : 'Workout Plan'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 13\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 23\n      }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 25\n      }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        sx: {\n          my: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 84\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 25\n      }, this), !loading && !isEditing && !plan && /*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        sx: {\n          my: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          children: \"No workout plan found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(PlaylistAddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 60\n          }, this),\n          onClick: handleCreateNewPlan,\n          children: \"Create New Workout Plan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 17\n      }, this), isEditing && editablePlan && /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: e => e.preventDefault(),\n        children: [\" \", /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          sx: {\n            mb: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Plan Name\",\n              name: \"name\",\n              value: editablePlan.name,\n              onChange: handlePlanInputChange,\n              fullWidth: true,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Plan Description\",\n              name: \"description\",\n              value: editablePlan.description,\n              onChange: handlePlanInputChange,\n              fullWidth: true,\n              multiline: true,\n              rows: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          value: currentDayTab,\n          onChange: (e, newValue) => setCurrentDayTab(newValue),\n          \"aria-label\": \"Workout days\",\n          sx: {\n            mb: 2\n          },\n          centered: true,\n          children: days.map((day, index) => /*#__PURE__*/_jsxDEV(Tab, {\n            label: `Day ${day}`\n          }, day, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 21\n        }, this), days.length > 0 && groupedWorkouts[days[currentDayTab]] && renderWorkoutForms(groupedWorkouts[days[currentDayTab]], days[currentDayTab]), days.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 44\n          }, this),\n          onClick: () => addWorkoutToDay(days[currentDayTab] || 1),\n          sx: {\n            mt: 1,\n            mb: 2\n          },\n          children: [\"Add Exercise to Day \", days[currentDayTab] || 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 25\n        }, this), editablePlan.workouts.length === 0 && /*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 45\n          }, this),\n          onClick: () => addWorkoutToDay(1),\n          sx: {\n            mt: 1,\n            mb: 2\n          },\n          children: \"Add Exercise to Day 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            my: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            display: 'flex',\n            gap: 2,\n            justifyContent: 'flex-end'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            onClick: cancelEditing,\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 80\n            }, this),\n            onClick: handleSaveChanges,\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 40\n            }, this) : 'Save Plan'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 9\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteConfirmOpen,\n      onClose: () => setDeleteConfirmOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Confirm Delete Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"This dialog is for deleting an existing plan. If you are creating a new plan and want to discard, use Cancel.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setDeleteConfirmOpen(false),\n          disabled: loading,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 430,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkoutPage, \"RWtetCw2CW0apYe1/3Wx2SdNwEc=\");\n_c = WorkoutPage;\nexport default WorkoutPage;\nvar _c;\n$RefreshReg$(_c, \"WorkoutPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","createElement","_createElement","Typography","Container","Paper","Box","Button","CircularProgress","Alert","Grid","TextField","List","ListItem","ListItemText","IconButton","Divider","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Autocomplete","Chip","Tabs","Tab","Accordion","AccordionSummary","AccordionDetails","Checkbox","FormControlLabel","ExpandMoreIcon","DeleteIcon","EditIcon","AddIcon","SaveIcon","PlaylistAddIcon","getMyWorkoutPlan","updateMyWorkoutPlan","deleteMyWorkoutPlan","searchExercises","createWorkoutPlan","jsxDEV","_jsxDEV","Fragment","_Fragment","emptySetDetail","set_number","reps","weight","rpe","rest_duration","is_warm_up","emptyWorkout","day","name","exercise_id","muscles_targeted","set_details","temp_id","Date","now","Math","random","emptyPlan","description","workouts","WorkoutPage","_s","_editablePlan$workout","plan","setPlan","editablePlan","setEditablePlan","loading","setLoading","error","setError","success","setSuccess","isEditing","setIsEditing","deleteConfirmOpen","setDeleteConfirmOpen","exerciseSearchQuery","setExerciseSearchQuery","exerciseSearchResults","setExerciseSearchResults","searchLoading","setSearchLoading","currentDayTab","setCurrentDayTab","fetchPlan","data","JSON","parse","stringify","err","response","status","_err$response","_err$response$data","message","handleSearchExercises","query","length","exercises","searchErr","console","handlePlanInputChange","e","value","target","prev","handleWorkoutChange","workoutIndex","field","updatedWorkouts","handleSetDetailChange","setIndex","type","parsedValue","parseFloat","updatedSetDetails","addWorkoutToDay","removeWorkout","filter","_","index","addSetToWorkout","newSetNumber","removeSetFromWorkout","sIdx","map","set","idx","handleSelectExercise","exercise","id","primary_muscle_groups","supporting_muscle_groups","handleSaveChanges","planToSave","rest","_err$response2","_err$response2$data","handleDeletePlan","_err$response3","_err$response3$data","handleCreateNewPlan","newPlan","cancelEditing","workoutsByDay","reduce","acc","workout","push","displayedPlan","groupedWorkouts","days","Object","keys","Number","sort","a","b","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","renderSetForms","elevation","sx","p","mb","variant","gutterBottom","container","spacing","item","xs","sm","label","onChange","fullWidth","size","InputProps","inputProps","step","min","max","control","checked","textAlign","onClick","color","fontSize","renderWorkoutForms","workoutsForDay","indexInDay","findIndex","w","warn","options","getOptionLabel","option","find","ex","onInputChange","event","newInputValue","newValue","renderInput","params","endAdornment","renderOption","props","_option$primary_muscl","key","__self","__source","width","wordWrap","join","disabled","multiline","parseInt","mt","startIcon","renderReadOnlyWorkout","expandIcon","ml","dense","disableGutters","primary","secondary","planWorkoutsByDay","planDays","maxWidth","md","component","mr","severity","open","onClose","autoFocus","my","onSubmit","preventDefault","required","rows","centered","gap","_c","$RefreshReg$"],"sources":["/Users/ishannigam/Code/Example/Genfit/genfit-frontend/src/pages/WorkoutPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Typography,\n  Container,\n  Paper,\n  Box,\n  Button,\n  CircularProgress,\n  Alert,\n  Grid,\n  TextField,\n  List,\n  ListItem,\n  ListItemText,\n  IconButton,\n  Divider,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Autocomplete,\n  Chip,\n  Tabs,\n  Tab,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Checkbox,\n  FormControlLabel\n} from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport AddIcon from '@mui/icons-material/Add';\nimport SaveIcon from '@mui/icons-material/Save';\nimport PlaylistAddIcon from '@mui/icons-material/PlaylistAdd';\nimport { getMyWorkoutPlan, updateMyWorkoutPlan, deleteMyWorkoutPlan, searchExercises, createWorkoutPlan } from '../api';\n\n// Define a structure for an empty workout object and set details\nconst emptySetDetail = () => ({ set_number: 1, reps: 10, weight: 0, rpe: 7, rest_duration: 60, is_warm_up: false });\nconst emptyWorkout = (day = 1) => ({\n  name: '', // Will be exercise name\n  exercise_id: '', // Will be from search\n  muscles_targeted: [], // Will be from selected exercise\n  day: day,\n  set_details: [emptySetDetail()],\n  // temp client-side id for list keys during editing\n  temp_id: Date.now() + Math.random() \n});\nconst emptyPlan = () => ({\n    name: 'My New Workout Plan',\n    description: 'A comprehensive plan for the week.',\n    workouts: [emptyWorkout(1)]\n});\n\nconst WorkoutPage = () => {\n  const [plan, setPlan] = useState(null);\n  const [editablePlan, setEditablePlan] = useState(null); // For editing\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isEditing, setIsEditing] = useState(false);\n  const [deleteConfirmOpen, setDeleteConfirmOpen] = useState(false);\n\n  const [exerciseSearchQuery, setExerciseSearchQuery] = useState('');\n  const [exerciseSearchResults, setExerciseSearchResults] = useState([]);\n  const [searchLoading, setSearchLoading] = useState(false);\n  const [currentDayTab, setCurrentDayTab] = useState(0); // For tabbed day view\n\n  const fetchPlan = useCallback(async () => {\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const { data } = await getMyWorkoutPlan();\n      setPlan(data);\n      setEditablePlan(JSON.parse(JSON.stringify(data))); // Deep copy for editing\n    } catch (err) {\n      if (err.response && err.response.status === 404) {\n        setPlan(null); // No plan exists\n        setEditablePlan(null);\n        setError('No workout plan found. You can create one.');\n      } else {\n        setError(err.response?.data?.message || 'Failed to fetch workout plan.');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchPlan();\n  }, [fetchPlan]);\n\n  const handleSearchExercises = useCallback(async (query) => {\n    if (query && query.length >= 2) {\n      setSearchLoading(true);\n      try {\n        const { data } = await searchExercises(query);\n        setExerciseSearchResults(data.exercises || []);\n      } catch (searchErr) {\n        console.error('Exercise search failed:', searchErr);\n        setExerciseSearchResults([]);\n      }\n      setSearchLoading(false);\n    }\n  }, []);\n\n  const handlePlanInputChange = (e) => {\n    const { name, value } = e.target;\n    setEditablePlan(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleWorkoutChange = (workoutIndex, field, value) => {\n    setEditablePlan(prev => {\n      const updatedWorkouts = [...prev.workouts];\n      updatedWorkouts[workoutIndex] = { ...updatedWorkouts[workoutIndex], [field]: value };\n      return { ...prev, workouts: updatedWorkouts };\n    });\n  };\n\n  const handleSetDetailChange = (workoutIndex, setIndex, field, value, type = 'text') => {\n    const parsedValue = type === 'number' ? parseFloat(value) : value;\n    setEditablePlan(prev => {\n      const updatedWorkouts = [...prev.workouts];\n      const updatedSetDetails = [...updatedWorkouts[workoutIndex].set_details];\n      updatedSetDetails[setIndex] = { ...updatedSetDetails[setIndex], [field]: parsedValue };\n      updatedWorkouts[workoutIndex] = { ...updatedWorkouts[workoutIndex], set_details: updatedSetDetails };\n      return { ...prev, workouts: updatedWorkouts };\n    });\n  };\n\n  const addWorkoutToDay = (day) => {\n    setEditablePlan(prev => ({\n      ...prev,\n      workouts: [...prev.workouts, emptyWorkout(day)]\n    }));\n  };\n\n  const removeWorkout = (workoutIndex) => {\n    setEditablePlan(prev => ({\n      ...prev,\n      workouts: prev.workouts.filter((_, index) => index !== workoutIndex)\n    }));\n  };\n\n  const addSetToWorkout = (workoutIndex) => {\n    setEditablePlan(prev => {\n      const updatedWorkouts = [...prev.workouts];\n      const newSetNumber = updatedWorkouts[workoutIndex].set_details.length + 1;\n      updatedWorkouts[workoutIndex].set_details = [...updatedWorkouts[workoutIndex].set_details, {...emptySetDetail(), set_number: newSetNumber}];\n      return { ...prev, workouts: updatedWorkouts };\n    });\n  };\n\n  const removeSetFromWorkout = (workoutIndex, setIndex) => {\n    setEditablePlan(prev => {\n      const updatedWorkouts = [...prev.workouts];\n      updatedWorkouts[workoutIndex].set_details = updatedWorkouts[workoutIndex].set_details.filter((_, sIdx) => sIdx !== setIndex);\n      // Renumber sets\n      updatedWorkouts[workoutIndex].set_details = updatedWorkouts[workoutIndex].set_details.map((set, idx) => ({...set, set_number: idx + 1}));\n      return { ...prev, workouts: updatedWorkouts };\n    });\n  };\n\n  const handleSelectExercise = (workoutIndex, exercise) => {\n    if (exercise) {\n        setEditablePlan(prev => {\n            const updatedWorkouts = [...prev.workouts];\n            updatedWorkouts[workoutIndex] = {\n                ...updatedWorkouts[workoutIndex],\n                name: exercise.name,\n                exercise_id: exercise.id,\n                muscles_targeted: [...(exercise.primary_muscle_groups || []), ...(exercise.supporting_muscle_groups || [])]\n            };\n            return { ...prev, workouts: updatedWorkouts };\n        });\n    }\n  };\n\n  const handleSaveChanges = async () => {\n    if (!editablePlan) return;\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n        // Remove temp_id before sending to backend\n        const planToSave = {\n            ...editablePlan,\n            workouts: editablePlan.workouts.map(({ temp_id, ...rest }) => rest)\n        };\n\n      if (plan && plan.id) { // Plan exists, update it\n        await updateMyWorkoutPlan(planToSave);\n        setSuccess('Workout plan updated successfully!');\n      } else { // No plan exists, create new\n        await createWorkoutPlan(planToSave);\n        setSuccess('Workout plan created successfully!');\n      }\n      fetchPlan(); // Refetch the plan to get the latest version (including ID if new)\n      setIsEditing(false);\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to save workout plan.');\n    }\n    setLoading(false);\n  };\n\n  const handleDeletePlan = async () => {\n    setDeleteConfirmOpen(false);\n    if (!plan || !plan.id) return; // Should not happen if delete button is visible\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      await deleteMyWorkoutPlan();\n      setSuccess('Workout plan deleted successfully!');\n      setPlan(null);\n      setEditablePlan(null);\n      setIsEditing(false);\n      // Optionally, prompt to create a new one or show the create button\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to delete workout plan.');\n    }\n    setLoading(false);\n  };\n  \n  const handleCreateNewPlan = () => {\n    const newPlan = emptyPlan();\n    setPlan({id: null, ...newPlan }); // Temporarily set plan to enable editing UI\n    setEditablePlan(JSON.parse(JSON.stringify(newPlan)));\n    setIsEditing(true);\n    setError(''); // Clear previous \"No plan found\" error\n  };\n\n  const cancelEditing = () => {\n    setIsEditing(false);\n    if (plan && plan.id) {\n        setEditablePlan(JSON.parse(JSON.stringify(plan))); // Reset to original plan if exists\n    } else {\n        setEditablePlan(null); // No existing plan, clear editable form\n        setError('No workout plan found. You can create one.'); // Reshow error if cancelling creation\n    }\n    setError('');\n    setSuccess('');\n  };\n\n  // Group workouts by day for display\n  const workoutsByDay = (workouts) => {\n    if (!workouts) return {};\n    return workouts.reduce((acc, workout) => {\n      const day = workout.day || 1; // Default to day 1 if not specified\n      if (!acc[day]) acc[day] = [];\n      acc[day].push(workout);\n      return acc;\n    }, {});\n  };\n\n  const displayedPlan = isEditing ? editablePlan : plan;\n  const groupedWorkouts = displayedPlan ? workoutsByDay(displayedPlan.workouts) : {};\n  const days = Object.keys(groupedWorkouts).map(Number).sort((a,b) => a-b);\n  if (days.length === 0 && isEditing && editablePlan?.workouts?.length > 0) {\n      // If editing and all workouts are for day 0 or undefined, show them under Day 1 tab\n      days.push(1);\n      groupedWorkouts[1] = editablePlan.workouts;\n  }\n  if (days.length > 0 && currentDayTab >= days.length) {\n      setCurrentDayTab(0); // Reset tab if it becomes invalid\n  }\n\n\n  if (loading && !plan && !isEditing) {\n    return <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"calc(100vh - 200px)\"><CircularProgress /></Box>;\n  }\n\n  const renderSetForms = (workout, workoutIndex) => {\n    return workout.set_details.map((set, setIndex) => (\n      <Paper key={set.temp_id || setIndex} elevation={1} sx={{ p: 1.5, mb: 1.5 }}>\n        <Typography variant=\"subtitle2\" gutterBottom>Set {set.set_number} {set.is_warm_up ? '(Warm-up)' : ''}</Typography>\n        <Grid container spacing={1.5} alignItems=\"center\">\n          <Grid item xs={6} sm={2}><TextField label=\"Reps\" name=\"reps\" type=\"number\" value={set.reps} onChange={(e) => handleSetDetailChange(workoutIndex, setIndex, 'reps', e.target.value, 'number')} fullWidth size=\"small\"/></Grid>\n          <Grid item xs={6} sm={2}><TextField label=\"Weight\" name=\"weight\" type=\"number\" value={set.weight} onChange={(e) => handleSetDetailChange(workoutIndex, setIndex, 'weight', e.target.value, 'number')} fullWidth size=\"small\" InputProps={{ inputProps: { step: 0.1 } }}/></Grid>\n          <Grid item xs={6} sm={2}><TextField label=\"RPE\" name=\"rpe\" type=\"number\" value={set.rpe} onChange={(e) => handleSetDetailChange(workoutIndex, setIndex, 'rpe', e.target.value, 'number')} fullWidth size=\"small\" InputProps={{ inputProps: { min:1, max:10 } }}/></Grid>\n          <Grid item xs={6} sm={2}><TextField label=\"Rest (s)\" name=\"rest_duration\" type=\"number\" value={set.rest_duration} onChange={(e) => handleSetDetailChange(workoutIndex, setIndex, 'rest_duration', e.target.value, 'number')} fullWidth size=\"small\"/></Grid>\n          <Grid item xs={12} sm={3}>\n            <FormControlLabel control={<Checkbox checked={set.is_warm_up || false} onChange={(e) => handleSetDetailChange(workoutIndex, setIndex, 'is_warm_up', e.target.checked)} />} label=\"Warm-up?\" size=\"small\"/>\n          </Grid>\n          <Grid item xs={12} sm={1} sx={{textAlign: 'right'}}>\n            <IconButton size=\"small\" onClick={() => removeSetFromWorkout(workoutIndex, setIndex)} color=\"error\" aria-label=\"Remove Set\">\n                <DeleteIcon fontSize=\"small\"/>\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Paper>\n    ));\n  };\n\n  const renderWorkoutForms = (workoutsForDay, day) => {\n    return workoutsForDay.map((workout, indexInDay) => {\n      // Find the global index of the workout in editablePlan.workouts\n      const workoutIndex = editablePlan.workouts.findIndex(w => w.temp_id === workout.temp_id || (w.exercise_id === workout.exercise_id && w.day === workout.day && w.name === workout.name) );\n      if (workoutIndex === -1 && isEditing) {\n          console.warn(\"Could not find workout index for\", workout);\n          return null; // Should not happen if temp_id is reliable\n      }\n      return (\n        <Paper key={workout.temp_id || workoutIndex} elevation={2} sx={{ p: 2, mb: 2 }}>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb:1}}>\n            <Typography variant=\"h6\">{workout.name || 'New Exercise'}</Typography>\n            <IconButton onClick={() => removeWorkout(workoutIndex)} color=\"error\" aria-label=\"Remove Exercise from Day\">\n                <DeleteIcon />\n            </IconButton>\n          </Box>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Autocomplete\n                options={exerciseSearchResults}\n                getOptionLabel={(option) => option.name}\n                value={exerciseSearchResults.find(ex => ex.id === workout.exercise_id) || null}\n                loading={searchLoading}\n                onInputChange={(event, newInputValue) => {\n                  setExerciseSearchQuery(newInputValue);\n                  handleSearchExercises(newInputValue);\n                }}\n                onChange={(event, newValue) => {\n                  handleSelectExercise(workoutIndex, newValue);\n                }}\n                renderInput={(params) => <TextField {...params} label=\"Search and Select Exercise\" fullWidth \n                InputProps={{ ...params.InputProps, endAdornment: (<>{searchLoading ? <CircularProgress color=\"inherit\" size={20} /> : null}{params.InputProps.endAdornment}</>)}} />}\n                renderOption={(props, option) => (\n                    <li {...props} key={option.id}>\n                        <Grid container alignItems=\"center\">\n                            <Grid item sx={{ display: 'flex', width: 44 }}>\n                                {/* Future: Icon for exercise type? */}\n                            </Grid>\n                            <Grid item sx={{ width: 'calc(100% - 44px)', wordWrap: 'break-word' }}>\n                                <Typography variant=\"subtitle2\">{option.name}</Typography>\n                                <Typography variant=\"caption\" color=\"text.secondary\">\n                                    {option.primary_muscle_groups?.join(', ')}\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    </li>\n                )}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TextField label=\"Muscles Targeted\" value={(workout.muscles_targeted || []).join(', ')} fullWidth disabled multiline size=\"small\"/>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n                <TextField label=\"Day Number\" type=\"number\" value={workout.day} onChange={(e) => handleWorkoutChange(workoutIndex, 'day', parseInt(e.target.value) || 1)} fullWidth size=\"small\" InputProps={{ inputProps: { min: 1 } }}/>\n            </Grid>\n          </Grid>\n          <Typography variant=\"subtitle1\" sx={{mt: 2, mb:1}}>Sets:</Typography>\n          {renderSetForms(workout, workoutIndex)}\n          <Button startIcon={<AddIcon />} onClick={() => addSetToWorkout(workoutIndex)} size=\"small\" sx={{mt:1}}>\n            Add Set\n          </Button>\n        </Paper>\n      );\n    });\n  };\n\n  const renderReadOnlyWorkout = (workout) => (\n    <Accordion key={workout.name + workout.day + Math.random()} sx={{mb:1}}>\n        <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n            <Typography variant=\"h6\">{workout.name}</Typography>\n            <Chip label={`Day ${workout.day}`} size=\"small\" sx={{ml: 2}}/>\n        </AccordionSummary>\n        <AccordionDetails>\n            <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n                Muscles: {(workout.muscles_targeted || []).join(', ')}\n            </Typography>\n            <List dense>\n                {workout.set_details.map((set, index) => (\n                    <ListItem key={index} disableGutters>\n                        <ListItemText \n                            primary={`Set ${set.set_number}: ${set.reps} reps @ ${set.weight}kg (RPE ${set.rpe})`}\n                            secondary={`Rest: ${set.rest_duration}s ${set.is_warm_up ? '(Warm-up)' : ''}`}\n                        />\n                    </ListItem>\n                ))}\n            </List>\n        </AccordionDetails>\n    </Accordion>\n  );\n\n  if (!isEditing && plan && plan.id) {\n    const planWorkoutsByDay = workoutsByDay(plan.workouts);\n    const planDays = Object.keys(planWorkoutsByDay).map(Number).sort((a,b)=>a-b);\n\n    return (\n        <Container maxWidth=\"lg\">\n            <Paper sx={{ p: { xs: 2, md: 3 }, mt: 3 }}>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2}}>\n                    <Typography variant=\"h4\" component=\"h1\">{plan.name}</Typography>\n                    <Box>\n                        <Button startIcon={<EditIcon />} variant=\"outlined\" onClick={() => setIsEditing(true)} sx={{mr:1}}>Edit Plan</Button>\n                        <Button startIcon={<DeleteIcon />} variant=\"outlined\" color=\"error\" onClick={() => setDeleteConfirmOpen(true)}>Delete Plan</Button>\n                    </Box>\n                </Box>\n                <Typography variant=\"subtitle1\" gutterBottom>{plan.description}</Typography>\n                {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n                {success && <Alert severity=\"success\" sx={{ mb: 2 }}>{success}</Alert>}\n                \n                {plan.workouts && plan.workouts.length > 0 ? (\n                    planDays.map(day => (\n                        <Box key={day} sx={{mb:3}}>\n                            <Typography variant=\"h5\" gutterBottom>Day {day}</Typography>\n                            {planWorkoutsByDay[day].map(renderReadOnlyWorkout)}\n                        </Box>\n                    ))\n                ) : (\n                    <Typography>This plan currently has no workouts.</Typography>\n                )}\n            </Paper>\n             <Dialog open={deleteConfirmOpen} onClose={() => setDeleteConfirmOpen(false)}>\n                <DialogTitle>Confirm Delete Plan</DialogTitle>\n                <DialogContent><DialogContentText>Are you sure you want to delete this entire workout plan? This action cannot be undone.</DialogContentText></DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setDeleteConfirmOpen(false)} disabled={loading}>Cancel</Button>\n                    <Button onClick={handleDeletePlan} color=\"error\" autoFocus disabled={loading}>{loading ? <CircularProgress size={24}/> : 'Delete Plan'}</Button>\n                </DialogActions>\n            </Dialog>\n        </Container>\n    );\n  }\n\n  // Render for loading, no plan, or editing mode\n  return (\n    <Container maxWidth=\"lg\">\n        <Paper sx={{ p: { xs: 2, md: 3 }, mt: 3 }}>\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                {isEditing ? (editablePlan?.id ? 'Edit Workout Plan' : 'Create Workout Plan') : 'Workout Plan'}\n            </Typography>\n\n            {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n            {success && <Alert severity=\"success\" sx={{ mb: 2 }}>{success}</Alert>}\n\n            {loading && <Box display=\"flex\" justifyContent=\"center\" sx={{ my: 3 }}><CircularProgress /></Box>}\n\n            {!loading && !isEditing && !plan && (\n                <Box textAlign=\"center\" sx={{my: 3}}>\n                    <Typography gutterBottom>No workout plan found.</Typography>\n                    <Button variant=\"contained\" startIcon={<PlaylistAddIcon/>} onClick={handleCreateNewPlan}>\n                        Create New Workout Plan\n                    </Button>\n                </Box>\n            )}\n\n            {(isEditing && editablePlan) && (\n                <Box component=\"form\" onSubmit={(e) => e.preventDefault()}> {/* Form submission handled by button */}\n                    <Grid container spacing={2} sx={{mb:2}}>\n                        <Grid item xs={12} md={6}>\n                            <TextField label=\"Plan Name\" name=\"name\" value={editablePlan.name} onChange={handlePlanInputChange} fullWidth required />\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField label=\"Plan Description\" name=\"description\" value={editablePlan.description} onChange={handlePlanInputChange} fullWidth multiline rows={2}/>\n                        </Grid>\n                    </Grid>\n\n                    <Tabs value={currentDayTab} onChange={(e, newValue) => setCurrentDayTab(newValue)} aria-label=\"Workout days\" sx={{mb:2}} centered>\n                        {days.map((day, index) => (\n                            <Tab label={`Day ${day}`} key={day} />\n                        ))}\n                        {/* Allow adding a new day if needed - more complex, for now manage days via workout's day prop*/}\n                    </Tabs>\n\n                    {days.length > 0 && groupedWorkouts[days[currentDayTab]] && renderWorkoutForms(groupedWorkouts[days[currentDayTab]], days[currentDayTab])}\n                    \n                    {days.length > 0 && (\n                        <Button startIcon={<AddIcon />} onClick={() => addWorkoutToDay(days[currentDayTab] || 1)} sx={{ mt: 1, mb: 2 }}>\n                            Add Exercise to Day {days[currentDayTab] || 1}\n                        </Button>\n                    )}\n                    {editablePlan.workouts.length === 0 && (\n                         <Button startIcon={<AddIcon />} onClick={() => addWorkoutToDay(1)} sx={{ mt: 1, mb: 2 }}>\n                            Add Exercise to Day 1\n                        </Button>\n                    )}\n\n                    <Divider sx={{my:2}}/>\n                    <Box sx={{ mt: 3, display: 'flex', gap: 2, justifyContent: 'flex-end' }}>\n                        <Button variant=\"outlined\" onClick={cancelEditing} disabled={loading}>Cancel</Button>\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon/>} onClick={handleSaveChanges} disabled={loading}>\n                            {loading ? <CircularProgress size={24} /> : 'Save Plan'}\n                        </Button>\n                    </Box>\n                </Box>\n            )}\n        </Paper>\n\n        {isEditing && (\n             <Dialog open={deleteConfirmOpen} onClose={() => setDeleteConfirmOpen(false)}>\n                <DialogTitle>Confirm Delete Plan</DialogTitle>\n                <DialogContent><DialogContentText>This dialog is for deleting an existing plan. If you are creating a new plan and want to discard, use Cancel.</DialogContentText></DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setDeleteConfirmOpen(false)} disabled={loading}>Close</Button>\n                 </DialogActions>\n            </Dialog>\n        )}\n    </Container>\n  );\n};\n\nexport default WorkoutPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}