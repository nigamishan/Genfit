{"ast":null,"code":"var _jsxFileName = \"/Users/ishannigam/Code/Example/Genfit/genfit-frontend/src/pages/ProgressPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { Typography, Container, Paper, Box, Button, CircularProgress, Alert, TextField, Grid, List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Divider, Select, MenuItem, FormControl, InputLabel, Chip, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport { getMyProgress, logProgress, deleteProgressEntry, getMyProgressSummary, getMyProgressTrend } from '../api';\nimport dayjs from 'dayjs';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip as ChartTooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, ChartTooltip, Legend);\nconst availableMetricTypes = ['weight', 'body_fat_percentage', 'muscle_mass', 'waist_circumference', 'calories_consumed', 'calories_burned', 'mood', 'sleep_duration', 'water_intake'];\nconst commonUnits = {\n  weight: 'kg',\n  body_fat_percentage: '%',\n  muscle_mass: 'kg',\n  waist_circumference: 'cm',\n  calories_consumed: 'kcal',\n  calories_burned: 'kcal',\n  mood: '1-10',\n  sleep_duration: 'hours',\n  water_intake: 'ml'\n};\nconst ProgressPage = () => {\n  _s();\n  const [progressEntries, setProgressEntries] = useState([]);\n  const [summary, setSummary] = useState(null);\n  const [trends, setTrends] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Form state for new entry\n  const [newEntry, setNewEntry] = useState({\n    metric_type: 'weight',\n    value: '',\n    unit: commonUnits['weight'],\n    recorded_at: dayjs(),\n    notes: ''\n  });\n  const [showAddForm, setShowAddForm] = useState(false);\n\n  // Filters state\n  const [filters, setFilters] = useState({\n    metric_types: [],\n    start_date: null,\n    end_date: null,\n    sort_order: 'desc'\n  });\n  const [deleteConfirm, setDeleteConfirm] = useState({\n    open: false,\n    entryId: null\n  });\n  const fetchProgressData = useCallback(async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const params = {\n        metric_types: filters.metric_types.join(','),\n        start_date: filters.start_date ? filters.start_date.toISOString() : undefined,\n        end_date: filters.end_date ? filters.end_date.toISOString() : undefined,\n        sort_order: filters.sort_order,\n        limit: 50 // Default limit\n      };\n      const {\n        data\n      } = await getMyProgress(params);\n      setProgressEntries(data.entries || []); // Assuming API returns { entries: [...] }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch progress entries.');\n    }\n    setLoading(false);\n  }, [filters]);\n  const fetchSummary = useCallback(async () => {\n    try {\n      const {\n        data\n      } = await getMyProgressSummary();\n      setSummary(data.summary || {}); // Assuming API returns { summary: { ... } }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Failed to fetch summary:\", ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message);\n    }\n  }, []);\n  const fetchTrends = useCallback(async () => {\n    try {\n      const params = {\n        metric_types: filters.metric_types.join(',') || availableMetricTypes.join(',')\n      }; // Fetch all if none selected\n      const {\n        data\n      } = await getMyProgressTrend(params);\n      setTrends(data.trends || {}); // Assuming API returns { trends: { ... } }\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error(\"Failed to fetch trends:\", ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message);\n    }\n  }, [filters.metric_types]);\n  useEffect(() => {\n    fetchProgressData();\n    fetchSummary();\n    fetchTrends();\n  }, [fetchProgressData, fetchSummary, fetchTrends]);\n  const handleFilterChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFilters(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleDateChange = (name, date) => {\n    setFilters(prev => ({\n      ...prev,\n      [name]: date\n    }));\n  };\n  const handleNewEntryChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    let unit = newEntry.unit;\n    if (name === 'metric_type') {\n      unit = commonUnits[value] || '';\n    }\n    setNewEntry(prev => ({\n      ...prev,\n      [name]: value,\n      unit\n    }));\n  };\n  const handleNewEntryDateChange = date => {\n    setNewEntry(prev => ({\n      ...prev,\n      recorded_at: date\n    }));\n  };\n  const handleAddEntry = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const payload = {\n        ...newEntry,\n        value: parseFloat(newEntry.value),\n        recorded_at: newEntry.recorded_at.toISOString()\n      };\n      await logProgress(payload);\n      setSuccess('Progress entry added successfully!');\n      setShowAddForm(false);\n      setNewEntry({\n        metric_type: 'weight',\n        value: '',\n        unit: commonUnits['weight'],\n        recorded_at: dayjs(),\n        notes: ''\n      });\n      fetchProgressData(); // Refresh list, summary and trends\n      fetchSummary();\n      fetchTrends();\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      setError(((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Failed to add progress entry.');\n    }\n    setLoading(false);\n  };\n  const openDeleteConfirm = entryId => {\n    setDeleteConfirm({\n      open: true,\n      entryId\n    });\n  };\n  const closeDeleteConfirm = () => {\n    setDeleteConfirm({\n      open: false,\n      entryId: null\n    });\n  };\n  const handleDeleteEntry = async () => {\n    if (!deleteConfirm.entryId) return;\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      await deleteProgressEntry(deleteConfirm.entryId);\n      setSuccess('Progress entry deleted successfully!');\n      fetchProgressData(); // Refresh list, summary and trends\n      fetchSummary();\n      fetchTrends();\n    } catch (err) {\n      var _err$response5, _err$response5$data;\n      setError(((_err$response5 = err.response) === null || _err$response5 === void 0 ? void 0 : (_err$response5$data = _err$response5.data) === null || _err$response5$data === void 0 ? void 0 : _err$response5$data.message) || 'Failed to delete progress entry.');\n    }\n    closeDeleteConfirm();\n    setLoading(false);\n  };\n  const getChartData = metricType => {\n    if (!trends || !trends[metricType] || trends[metricType].length === 0) {\n      return {\n        labels: [],\n        datasets: [{\n          label: metricType,\n          data: [],\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1\n        }]\n      };\n    }\n    const labels = trends[metricType].map(entry => dayjs(entry.date).format('MMM D'));\n    const data = trends[metricType].map(entry => entry.value);\n    return {\n      labels,\n      datasets: [{\n        label: `${metricType.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())} Trend`,\n        data,\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n    dateAdapter: AdapterDayjs,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(Paper, {\n        sx: {\n          p: {\n            xs: 2,\n            md: 3\n          },\n          mt: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          gutterBottom: true,\n          children: \"Progress Tracking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          sx: {\n            mb: 2\n          },\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"success\",\n          sx: {\n            mb: 2\n          },\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: Paper,\n          elevation: 2,\n          sx: {\n            p: 2,\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Filters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"metric-types-filter-label\",\n                  children: \"Metric Types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"metric-types-filter-label\",\n                  multiple: true,\n                  name: \"metric_types\",\n                  value: filters.metric_types,\n                  onChange: handleFilterChange,\n                  label: \"Metric Types\",\n                  renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: 'flex',\n                      flexWrap: 'wrap',\n                      gap: 0.5\n                    },\n                    children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                      label: value.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n                    }, value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 271,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 25\n                  }, this),\n                  children: availableMetricTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: type,\n                    children: type.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"Start Date\",\n                value: filters.start_date,\n                onChange: date => handleDateChange('start_date', date),\n                slotProps: {\n                  textField: {\n                    fullWidth: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"End Date\",\n                value: filters.end_date,\n                onChange: date => handleDateChange('end_date', date),\n                slotProps: {\n                  textField: {\n                    fullWidth: true\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"sort-order-label\",\n                  children: \"Sort\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"sort-order-label\",\n                  name: \"sort_order\",\n                  value: filters.sort_order,\n                  onChange: handleFilterChange,\n                  label: \"Sort\",\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"desc\",\n                    children: \"Newest First\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"asc\",\n                    children: \"Oldest First\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 1,\n              sx: {\n                textAlign: 'right'\n              },\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: fetchProgressData,\n                disabled: loading,\n                sx: {\n                  height: '56px'\n                },\n                children: \"Apply\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          startIcon: /*#__PURE__*/_jsxDEV(AddCircleOutlineIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 24\n          }, this),\n          onClick: () => setShowAddForm(!showAddForm),\n          sx: {\n            mb: 2\n          },\n          \"aria-expanded\": showAddForm,\n          \"aria-controls\": \"add-progress-form\",\n          children: showAddForm ? 'Cancel' : 'Add New Progress Entry'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), showAddForm && /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: handleAddEntry,\n          sx: {\n            p: 2,\n            border: '1px solid lightgray',\n            borderRadius: 1,\n            mb: 3\n          },\n          id: \"add-progress-form\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"New Progress Entry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                fullWidth: true,\n                required: true,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"metric-type-label\",\n                  children: \"Metric Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"metric-type-label\",\n                  name: \"metric_type\",\n                  value: newEntry.metric_type,\n                  onChange: handleNewEntryChange,\n                  label: \"Metric Type\",\n                  children: availableMetricTypes.map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: type,\n                    children: type.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n                  }, type, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Value\",\n                name: \"value\",\n                type: \"number\",\n                value: newEntry.value,\n                onChange: handleNewEntryChange,\n                fullWidth: true,\n                required: true,\n                InputProps: {\n                  inputProps: {\n                    step: 'any'\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 3,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Unit\",\n                name: \"unit\",\n                value: newEntry.unit,\n                fullWidth: true,\n                disabled: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                label: \"Recorded At\",\n                value: newEntry.recorded_at,\n                onChange: handleNewEntryDateChange,\n                slotProps: {\n                  textField: {\n                    fullWidth: true,\n                    required: true\n                  }\n                },\n                maxDate: dayjs() // Prevent future dates\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Notes (Optional)\",\n                name: \"notes\",\n                value: newEntry.notes,\n                onChange: handleNewEntryChange,\n                fullWidth: true,\n                multiline: true,\n                rows: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mt: 2\n            },\n            disabled: loading,\n            children: loading && showAddForm ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 43\n            }, this) : 'Log Entry'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this), summary && Object.keys(summary).length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n          component: Paper,\n          elevation: 2,\n          sx: {\n            p: 2,\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Progress Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: Object.entries(summary).map(([metric, data]) => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                elevation: 1,\n                sx: {\n                  p: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  gutterBottom: true,\n                  children: metric.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"Latest: \", data.latest_value, \" \", data.unit, \" (\", dayjs(data.latest_date).format('MMM D, YYYY'), \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"Min: \", data.min_value, \" \", data.unit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"Max: \", data.max_value, \" \", data.unit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"Average: \", parseFloat(data.average_value).toFixed(2), \" \", data.unit]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 29\n              }, this)\n            }, metric, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 13\n        }, this), trends && Object.keys(trends).length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n          component: Paper,\n          elevation: 2,\n          sx: {\n            p: 2,\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Progress Trends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: Object.keys(trends).filter(metricType => trends[metricType] && trends[metricType].length > 1).map(metricType => /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 6,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle1\",\n                align: \"center\",\n                children: metricType.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Line, {\n                data: getChartData(metricType)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 29\n              }, this)]\n            }, metricType, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          sx: {\n            mt: 2\n          },\n          children: \"Logged Entries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 11\n        }, this), loading && progressEntries.length === 0 ? /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          justifyContent: \"center\",\n          sx: {\n            my: 3\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 72\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this) : progressEntries.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n          children: progressEntries.map(entry => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: `${entry.metric_type.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}: ${entry.value} ${entry.unit}`,\n                secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [`Recorded: ${dayjs(entry.recorded_at).format('YYYY-MM-DD HH:mm')}`, entry.notes && /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"caption\",\n                    display: \"block\",\n                    children: [\"Notes: \", entry.notes]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 439,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  edge: \"end\",\n                  \"aria-label\": \"delete\",\n                  onClick: () => openDeleteConfirm(entry.id),\n                  disabled: loading,\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 444,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 443,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 19\n            }, this)]\n          }, entry.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mt: 2,\n            textAlign: 'center'\n          },\n          children: \"No progress entries found. Try adjusting filters or add a new entry.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: deleteConfirm.open,\n        onClose: closeDeleteConfirm,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Confirm Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Are you sure you want to delete this progress entry? This action cannot be undone.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: closeDeleteConfirm,\n            disabled: loading,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDeleteEntry,\n            color: \"error\",\n            autoFocus: true,\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 26\n            }, this) : 'Delete'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n_s(ProgressPage, \"qOjTN9QoYyyAq3bDZIn3D5QeZaU=\");\n_c = ProgressPage;\nexport default ProgressPage;\nvar _c;\n$RefreshReg$(_c, \"ProgressPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Typography","Container","Paper","Box","Button","CircularProgress","Alert","TextField","Grid","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Divider","Select","MenuItem","FormControl","InputLabel","Chip","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","LocalizationProvider","AdapterDayjs","DatePicker","DeleteIcon","AddCircleOutlineIcon","getMyProgress","logProgress","deleteProgressEntry","getMyProgressSummary","getMyProgressTrend","dayjs","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","ChartTooltip","Legend","jsxDEV","_jsxDEV","Fragment","_Fragment","register","availableMetricTypes","commonUnits","weight","body_fat_percentage","muscle_mass","waist_circumference","calories_consumed","calories_burned","mood","sleep_duration","water_intake","ProgressPage","_s","progressEntries","setProgressEntries","summary","setSummary","trends","setTrends","loading","setLoading","error","setError","success","setSuccess","newEntry","setNewEntry","metric_type","value","unit","recorded_at","notes","showAddForm","setShowAddForm","filters","setFilters","metric_types","start_date","end_date","sort_order","deleteConfirm","setDeleteConfirm","open","entryId","fetchProgressData","params","join","toISOString","undefined","limit","data","entries","err","_err$response","_err$response$data","response","message","fetchSummary","_err$response2","_err$response2$data","console","fetchTrends","_err$response3","_err$response3$data","handleFilterChange","e","name","target","prev","handleDateChange","date","handleNewEntryChange","handleNewEntryDateChange","handleAddEntry","preventDefault","payload","parseFloat","_err$response4","_err$response4$data","openDeleteConfirm","closeDeleteConfirm","handleDeleteEntry","_err$response5","_err$response5$data","getChartData","metricType","length","labels","datasets","label","borderColor","tension","map","entry","format","replace","l","toUpperCase","fill","dateAdapter","children","maxWidth","sx","p","xs","md","mt","variant","component","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","elevation","container","spacing","alignItems","item","sm","fullWidth","id","labelId","multiple","onChange","renderValue","selected","display","flexWrap","gap","type","slotProps","textField","textAlign","onClick","disabled","height","startIcon","onSubmit","border","borderRadius","required","InputProps","inputProps","step","maxDate","multiline","rows","color","size","Object","keys","metric","latest_value","latest_date","min_value","max_value","average_value","toFixed","filter","align","justifyContent","my","primary","secondary","edge","onClose","autoFocus","_c","$RefreshReg$"],"sources":["/Users/ishannigam/Code/Example/Genfit/genfit-frontend/src/pages/ProgressPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport {\n  Typography,\n  Container,\n  Paper,\n  Box,\n  Button,\n  CircularProgress,\n  Alert,\n  TextField,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Divider,\n  Select,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@mui/material';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\nimport { getMyProgress, logProgress, deleteProgressEntry, getMyProgressSummary, getMyProgressTrend } from '../api';\nimport dayjs from 'dayjs';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip as ChartTooltip,\n  Legend,\n} from 'chart.js';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  ChartTooltip,\n  Legend\n);\n\nconst availableMetricTypes = ['weight', 'body_fat_percentage', 'muscle_mass', 'waist_circumference', 'calories_consumed', 'calories_burned', 'mood', 'sleep_duration', 'water_intake'];\nconst commonUnits = {\n    weight: 'kg',\n    body_fat_percentage: '%',\n    muscle_mass: 'kg',\n    waist_circumference: 'cm',\n    calories_consumed: 'kcal',\n    calories_burned: 'kcal',\n    mood: '1-10',\n    sleep_duration: 'hours',\n    water_intake: 'ml'\n};\n\nconst ProgressPage = () => {\n  const [progressEntries, setProgressEntries] = useState([]);\n  const [summary, setSummary] = useState(null);\n  const [trends, setTrends] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Form state for new entry\n  const [newEntry, setNewEntry] = useState({\n    metric_type: 'weight',\n    value: '',\n    unit: commonUnits['weight'],\n    recorded_at: dayjs(),\n    notes: '',\n  });\n  const [showAddForm, setShowAddForm] = useState(false);\n\n  // Filters state\n  const [filters, setFilters] = useState({\n    metric_types: [],\n    start_date: null, \n    end_date: null,\n    sort_order: 'desc',\n  });\n\n  const [deleteConfirm, setDeleteConfirm] = useState({ open: false, entryId: null });\n\n  const fetchProgressData = useCallback(async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const params = {\n        metric_types: filters.metric_types.join(','),\n        start_date: filters.start_date ? filters.start_date.toISOString() : undefined,\n        end_date: filters.end_date ? filters.end_date.toISOString() : undefined,\n        sort_order: filters.sort_order,\n        limit: 50 // Default limit\n      };\n      const { data } = await getMyProgress(params);\n      setProgressEntries(data.entries || []); // Assuming API returns { entries: [...] }\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to fetch progress entries.');\n    }\n    setLoading(false);\n  }, [filters]);\n\n  const fetchSummary = useCallback(async () => {\n    try {\n      const { data } = await getMyProgressSummary();\n      setSummary(data.summary || {}); // Assuming API returns { summary: { ... } }\n    } catch (err) {\n      console.error(\"Failed to fetch summary:\", err.response?.data?.message || err.message)\n    }\n  }, []);\n\n  const fetchTrends = useCallback(async () => {\n    try {\n        const params = { metric_types: filters.metric_types.join(',') || availableMetricTypes.join(',') }; // Fetch all if none selected\n        const { data } = await getMyProgressTrend(params);\n        setTrends(data.trends || {}); // Assuming API returns { trends: { ... } }\n    } catch (err) {\n        console.error(\"Failed to fetch trends:\", err.response?.data?.message || err.message)\n    }\n  }, [filters.metric_types]);\n\n  useEffect(() => {\n    fetchProgressData();\n    fetchSummary();\n    fetchTrends();\n  }, [fetchProgressData, fetchSummary, fetchTrends]);\n\n  const handleFilterChange = (e) => {\n    const { name, value } = e.target;\n    setFilters(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleDateChange = (name, date) => {\n    setFilters(prev => ({ ...prev, [name]: date }));\n  };\n\n  const handleNewEntryChange = (e) => {\n    const { name, value } = e.target;\n    let unit = newEntry.unit;\n    if (name === 'metric_type') {\n        unit = commonUnits[value] || '';\n    }\n    setNewEntry(prev => ({ ...prev, [name]: value, unit }));\n  };\n\n  const handleNewEntryDateChange = (date) => {\n    setNewEntry(prev => ({ ...prev, recorded_at: date }));\n  };\n\n  const handleAddEntry = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      const payload = {\n        ...newEntry,\n        value: parseFloat(newEntry.value),\n        recorded_at: newEntry.recorded_at.toISOString(),\n      };\n      await logProgress(payload);\n      setSuccess('Progress entry added successfully!');\n      setShowAddForm(false);\n      setNewEntry({ metric_type: 'weight', value: '', unit: commonUnits['weight'], recorded_at: dayjs(), notes: '' });\n      fetchProgressData(); // Refresh list, summary and trends\n      fetchSummary();\n      fetchTrends();\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to add progress entry.');\n    }\n    setLoading(false);\n  };\n\n  const openDeleteConfirm = (entryId) => {\n    setDeleteConfirm({ open: true, entryId });\n  };\n\n  const closeDeleteConfirm = () => {\n    setDeleteConfirm({ open: false, entryId: null });\n  };\n\n  const handleDeleteEntry = async () => {\n    if (!deleteConfirm.entryId) return;\n    setLoading(true);\n    setError('');\n    setSuccess('');\n    try {\n      await deleteProgressEntry(deleteConfirm.entryId);\n      setSuccess('Progress entry deleted successfully!');\n      fetchProgressData(); // Refresh list, summary and trends\n      fetchSummary();\n      fetchTrends();\n    } catch (err) {\n      setError(err.response?.data?.message || 'Failed to delete progress entry.');\n    }\n    closeDeleteConfirm();\n    setLoading(false);\n  };\n\n  const getChartData = (metricType) => {\n    if (!trends || !trends[metricType] || trends[metricType].length === 0) {\n        return {\n            labels: [],\n            datasets: [{\n                label: metricType,\n                data: [],\n                borderColor: 'rgb(75, 192, 192)',\n                tension: 0.1\n            }]\n        };\n    }\n    const labels = trends[metricType].map(entry => dayjs(entry.date).format('MMM D'));\n    const data = trends[metricType].map(entry => entry.value);\n    return {\n      labels,\n      datasets: [\n        {\n          label: `${metricType.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())} Trend`,\n          data,\n          fill: false,\n          borderColor: 'rgb(75, 192, 192)',\n          tension: 0.1,\n        },\n      ],\n    };\n  };\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <Container maxWidth=\"lg\">\n        <Paper sx={{ p: { xs: 2, md: 3 }, mt: 3 }}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            Progress Tracking\n          </Typography>\n\n          {error && <Alert severity=\"error\" sx={{ mb: 2 }}>{error}</Alert>}\n          {success && <Alert severity=\"success\" sx={{ mb: 2 }}>{success}</Alert>}\n\n          {/* Filters */}\n          <Box component={Paper} elevation={2} sx={{ p: 2, mb: 3 }}>\n            <Typography variant=\"h6\" gutterBottom>Filters</Typography>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs={12} sm={6} md={3}>\n                <FormControl fullWidth>\n                  <InputLabel id=\"metric-types-filter-label\">Metric Types</InputLabel>\n                  <Select\n                    labelId=\"metric-types-filter-label\"\n                    multiple\n                    name=\"metric_types\"\n                    value={filters.metric_types}\n                    onChange={handleFilterChange}\n                    label=\"Metric Types\"\n                    renderValue={(selected) => (\n                        <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                          {selected.map((value) => (\n                            <Chip key={value} label={value.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())} />\n                          ))}\n                        </Box>\n                      )}\n                  >\n                    {availableMetricTypes.map((type) => (\n                      <MenuItem key={type} value={type}>\n                        {type.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <DatePicker \n                    label=\"Start Date\" \n                    value={filters.start_date} \n                    onChange={(date) => handleDateChange('start_date', date)} \n                    slotProps={{ textField: { fullWidth: true } }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                <DatePicker \n                    label=\"End Date\" \n                    value={filters.end_date} \n                    onChange={(date) => handleDateChange('end_date', date)} \n                    slotProps={{ textField: { fullWidth: true } }}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6} md={2}>\n                <FormControl fullWidth>\n                    <InputLabel id=\"sort-order-label\">Sort</InputLabel>\n                    <Select\n                        labelId=\"sort-order-label\"\n                        name=\"sort_order\"\n                        value={filters.sort_order}\n                        onChange={handleFilterChange}\n                        label=\"Sort\"\n                    >\n                        <MenuItem value=\"desc\">Newest First</MenuItem>\n                        <MenuItem value=\"asc\">Oldest First</MenuItem>\n                    </Select>\n                </FormControl>\n              </Grid>\n              <Grid item xs={12} md={1} sx={{textAlign: 'right'}}>\n                <Button variant=\"contained\" onClick={fetchProgressData} disabled={loading} sx={{height: '56px'}}>\n                  Apply\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n          \n          {/* Add New Entry Form Toggle */}\n          <Button \n            variant=\"contained\" \n            startIcon={<AddCircleOutlineIcon />} \n            onClick={() => setShowAddForm(!showAddForm)} sx={{ mb: 2 }}\n            aria-expanded={showAddForm}\n            aria-controls=\"add-progress-form\"\n            >\n            {showAddForm ? 'Cancel' : 'Add New Progress Entry'}\n          </Button>\n\n          {/* Add New Entry Form */}\n          {showAddForm && (\n            <Box component=\"form\" onSubmit={handleAddEntry} sx={{ p:2, border: '1px solid lightgray', borderRadius:1, mb:3}} id=\"add-progress-form\">\n              <Typography variant=\"h6\" gutterBottom>New Progress Entry</Typography>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <FormControl fullWidth required>\n                    <InputLabel id=\"metric-type-label\">Metric Type</InputLabel>\n                    <Select\n                      labelId=\"metric-type-label\"\n                      name=\"metric_type\"\n                      value={newEntry.metric_type}\n                      onChange={handleNewEntryChange}\n                      label=\"Metric Type\"\n                    >\n                      {availableMetricTypes.map((type) => (\n                        <MenuItem key={type} value={type}>\n                          {type.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                  <TextField \n                    label=\"Value\" \n                    name=\"value\" \n                    type=\"number\" \n                    value={newEntry.value} \n                    onChange={handleNewEntryChange} \n                    fullWidth \n                    required \n                    InputProps={{ inputProps: { step: 'any' } }}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={3}>\n                  <TextField label=\"Unit\" name=\"unit\" value={newEntry.unit} fullWidth disabled />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <DatePicker \n                    label=\"Recorded At\" \n                    value={newEntry.recorded_at} \n                    onChange={handleNewEntryDateChange} \n                    slotProps={{ textField: { fullWidth: true, required: true } }}\n                    maxDate={dayjs()} // Prevent future dates\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField label=\"Notes (Optional)\" name=\"notes\" value={newEntry.notes} onChange={handleNewEntryChange} fullWidth multiline rows={2} />\n                </Grid>\n              </Grid>\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" sx={{ mt: 2 }} disabled={loading}>\n                {loading && showAddForm ? <CircularProgress size={24} /> : 'Log Entry'}\n              </Button>\n            </Box>\n          )}\n\n          {/* Summary Section */}\n          {summary && Object.keys(summary).length > 0 && (\n            <Box component={Paper} elevation={2} sx={{ p: 2, mb: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>Progress Summary</Typography>\n                <Grid container spacing={2}>\n                    {Object.entries(summary).map(([metric, data]) => (\n                        <Grid item xs={12} sm={6} md={4} key={metric}>\n                            <Paper elevation={1} sx={{p:2}}>\n                                <Typography variant=\"subtitle1\" gutterBottom>{metric.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}</Typography>\n                                <Typography>Latest: {data.latest_value} {data.unit} ({dayjs(data.latest_date).format('MMM D, YYYY')})</Typography>\n                                <Typography>Min: {data.min_value} {data.unit}</Typography>\n                                <Typography>Max: {data.max_value} {data.unit}</Typography>\n                                <Typography>Average: {parseFloat(data.average_value).toFixed(2)} {data.unit}</Typography>\n                            </Paper>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Box>\n          )}\n\n          {/* Trends Section (Charts) */}\n          {trends && Object.keys(trends).length > 0 && (\n            <Box component={Paper} elevation={2} sx={{ p: 2, mb: 3 }}>\n                <Typography variant=\"h6\" gutterBottom>Progress Trends</Typography>\n                <Grid container spacing={3}>\n                    {Object.keys(trends).filter(metricType => trends[metricType] && trends[metricType].length > 1).map(metricType => (\n                        <Grid item xs={12} md={6} key={metricType}>\n                            <Typography variant=\"subtitle1\" align=\"center\">{metricType.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}</Typography>\n                            <Line data={getChartData(metricType)} />\n                        </Grid>\n                    ))}\n                </Grid>\n            </Box>\n          )}\n\n          {/* Progress Entries List */}\n          <Typography variant=\"h6\" gutterBottom sx={{mt:2}}>Logged Entries</Typography>\n          {loading && progressEntries.length === 0 ? (\n            <Box display=\"flex\" justifyContent=\"center\" sx={{ my: 3 }}><CircularProgress /></Box>\n          ) : progressEntries.length > 0 ? (\n            <List>\n              {progressEntries.map((entry) => (\n                <React.Fragment key={entry.id}>\n                  <ListItem>\n                    <ListItemText \n                      primary={`${entry.metric_type.replace('_', ' ').replace(/\\b\\w/g, l => l.toUpperCase())}: ${entry.value} ${entry.unit}`}\n                      secondary={<>\n                        {`Recorded: ${dayjs(entry.recorded_at).format('YYYY-MM-DD HH:mm')}`}\n                        {entry.notes && <Typography variant=\"caption\" display=\"block\">Notes: {entry.notes}</Typography>}\n                        </>}\n                    />\n                    <ListItemSecondaryAction>\n                      <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => openDeleteConfirm(entry.id)} disabled={loading}>\n                        <DeleteIcon />\n                      </IconButton>\n                    </ListItemSecondaryAction>\n                  </ListItem>\n                  <Divider />\n                </React.Fragment>\n              ))}\n            </List>\n          ) : (\n            <Typography sx={{mt:2, textAlign:'center'}}>No progress entries found. Try adjusting filters or add a new entry.</Typography>\n          )}\n        </Paper>\n\n        <Dialog open={deleteConfirm.open} onClose={closeDeleteConfirm}>\n          <DialogTitle>Confirm Delete</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Are you sure you want to delete this progress entry? This action cannot be undone.\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={closeDeleteConfirm} disabled={loading}>Cancel</Button>\n            <Button onClick={handleDeleteEntry} color=\"error\" autoFocus disabled={loading}>\n              {loading ? <CircularProgress size={24} /> : 'Delete'}\n            </Button>\n          </DialogActions>\n        </Dialog>\n\n      </Container>\n    </LocalizationProvider>\n  );\n};\n\nexport default ProgressPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}